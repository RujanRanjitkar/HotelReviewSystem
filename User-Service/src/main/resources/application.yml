spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/HRS_UserService
    username: postgres
    password: Rujan123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: USER-SERVICE
  config:
    import: optional:configserver:http://localhost:8085

  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: https://dev-83615810.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa9syy04sIfJ8EUk5d7
            client-secret: pa73_wn2RjHn8pCN_JjwQhfl-cE_CU9lvl3fulyb
        provider:
          okta:
            issuer-uri: https://dev-83615810.okta.com/oauth2/default

server:
  port: 8081

management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuit-breaker:
    instances:
      ratingHotelBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  rate-limiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 2s

okta:
  oauth2:
    issuer: https://dev-83615810.okta.com/oauth2/default
    audience: api://default